给你一个整数数组 nums ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。

解集 不能 包含重复的子集。返回的解集中，子集可以按 任意顺序 排列。


class Solution {
    List<Integer> path = new ArrayList<>();
    List<List<Integer>> result = new ArrayList<>();
    int[] used;

    public List<List<Integer>> subsetsWithDup(int[] nums) {
        used = new int[nums.length];
        Arrays.sort(nums); // 先排序
        backTracking(nums, 0, used);
        return result;
    }

    public void backTracking(int[] nums, int startIndex, int[] used) {
        result.add(new ArrayList<>(path));
        if (startIndex >= nums.length)
            return; // 可省略
        for (int i = startIndex; i < nums.length; i++) {
            if (i > 0 && nums[i] == nums[i - 1] && used[i - 1] == 0) // used[i-1]==0表示只在树层去重，树枝不去重
                continue;
            path.add(nums[i]);
            used[i] = 1;
            backTracking(nums, i + 1, used);
            path.remove(path.size() - 1);
            used[i] = 0;
        }
    }
}
