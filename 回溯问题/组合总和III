找出所有相加之和为 n 的 k 个数的组合，且满足下列条件：

只使用数字1到9
每个数字 最多使用一次 
返回 所有可能的有效组合的列表 。该列表不能包含相同的组合两次，组合可以以任何顺序返回。


class Solution {
    List<List<Integer>> result = new ArrayList<>();
    LinkedList<Integer> path = new LinkedList<>();
    public List<List<Integer>> combinationSum3(int k, int n) {
        backTracking(n,k,0,1);
        return result;
    }
    public void backTracking(int targetSum,int k, int sum, int startIndex){
        if(sum>targetSum) return; //剪枝
        if(path.size()==k){
            if(sum==targetSum){
                result.add(new ArrayList(path));
            }
            return;
        }
        for(int i = startIndex;i<=9-(k-path.size())+1;i++){
            sum += i;
            path.push(i);
            backTracking(targetSum,k,sum,i+1);
            sum -=i;
            path.pop();
        }
    }
}
