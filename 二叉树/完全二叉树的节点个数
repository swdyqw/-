给你一棵 完全二叉树 的根节点 root ，求出该树的节点个数。

完全二叉树 的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 h 层，则该层包含 1~ 2h 个节点。

// 普通二叉树解法
// class Solution {
//     public int countNodes(TreeNode root) {
//         if (root == null)
//             return 0;
//         int leftNums = countNodes(root.left);
//         int rightNums = countNodes(root.right);
//         return leftNums + rightNums + 1;
//     }
// }

// 完全二叉树解法
class Solution {
    public int countNodes(TreeNode root) {
        if (root == null)
            return 0;
        TreeNode left = root.left, right = root.right;
        int leftDepth = 0, rightDepth = 0;
        while (left != null) {
            left = left.left;
            leftDepth++;
        }
        while (right != null) {
            right = right.right;
            rightDepth++;
        }
        if (leftDepth == rightDepth)
            return (2 << leftDepth) - 1;
        // 2<<1等于2^2 所以leftDepth从0开始
        int leftNums = countNodes(root.left);
        int rightNums = countNodes(root.right);
        return leftNums + rightNums + 1;
    }
}
