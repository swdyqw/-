给你一棵二叉树的根节点 root ，翻转这棵二叉树，并返回其根节点。

// 递归遍历 前序或后序
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if (root == null)
            return root;
        TreeNode temp = root.left;
        root.left = root.right;
        root.right = temp;
        root.left = invertTree(root.left);
        root.right = invertTree(root.right);
        return root;
    }
}

// 迭代遍历
class Solution {
    public TreeNode invertTree(TreeNode root) {
        Deque<TreeNode> deque = new ArrayDeque<>();
        if (root != null)
            deque.push(root);
        while (!deque.isEmpty()) {
            TreeNode cur = deque.pop();
            TreeNode temp = cur.left;
            cur.left = cur.right;
            cur.right = temp;
            if (cur.left != null)
                deque.push(cur.left);
            if (cur.right != null)
                deque.push(cur.right);
        }
        return root;
    }
}
