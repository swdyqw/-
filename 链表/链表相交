public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode curA = headA;
        ListNode curB = headB;
        int lenA = 0, lenB = 0;
        while (curA != null) {
            lenA++;
            curA = curA.next;
        }
        while (curB != null) {
            lenB++;
            curB = curB.next;
        }
        int offset = Math.abs(lenA - lenB);
        curA = headA;
        curB = headB;
        if (lenA > lenB) {
            while (offset-- > 0 && curA != null) {
                curA = curA.next;
            }
            while (curA != curB) {
                curA = curA.next;
                curB = curB.next;
                if (curA == null || curB == null) {
                    return null;
                }
            }
            return curA;
        } else {
            while (offset-- > 0 && curB != null) {
                curB = curB.next;
            }
            while (curA != curB) {
                curA = curA.next;
                curB = curB.next;
                if (curA == null || curB == null) {
                    return null;
                }
            }
            return curA;
        }
    }
}
