//给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。

class Solution {
    public int[] sortedSquares(int[] nums) {
        int[] results = new int[nums.length];
        int k = nums.length - 1;
        int i = 0;
        int j = nums.length - 1;
        for (; i <= j || k >= 0; k--) {
            if (nums[i] * nums[i] > nums[j] * nums[j]) {
                results[k] = nums[i] * nums[i];
                i++;
            } else {
                results[k] = nums[j] * nums[j];
                j--;
            }
        }
        return results;
    }
}
