//给定一个含有 n 个正整数的数组和一个正整数 target 。
//
//        找出该数组中满足其总和大于等于 target 的长度最小的 连续子数组 [numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。

class Solution {
    public int minSubArrayLen(int target, int[] nums) {
        int begin = 0;
        int result = Integer.MAX_VALUE;
        int sum = 0;
        for (int end = 0; end < nums.length; end++) {
            sum += nums[end];
            if (end == nums.length - 1 && sum < target) {
                return 0;
            }
            while (sum >= target) {
                int subL = end - begin + 1;
                result = Math.min(result, subL);
                sum = sum - nums[begin];
                begin++;
            }
        }
        return result == Integer.MAX_VALUE ? 0 : result;
    }
}
