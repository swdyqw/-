给你一个 m x n 的矩阵 board ，由若干字符 'X' 和 'O' ，找到所有被 'X' 围绕的区域，并将这些区域里所有的 'O' 用 'X' 填充。


class Solution {
    public void solve(char[][] board) {
        int rowSize = board.length;
        int colSize = board[0].length;
        for(int i = 0; i < rowSize; i++) {
            if(board[i][0] == 'O') dfs(board, i, 0);
            if(board[i][colSize-1] == 'O') dfs(board, i, colSize-1);
        }
        for(int i = 1; i < colSize-1; i++) {
            if(board[0][i] == 'O') dfs(board, 0, i);
            if(board[rowSize-1][i] == 'O') dfs(board, rowSize-1, i);
        }
        for(int i = 0; i < rowSize; i++) {
            for(int j = 0; j < colSize; j++) {
                if(board[i][j] == 'A') board[i][j] = 'O';
                else if(board[i][j] == 'O') board[i][j] = 'X';
            }
        }
    }
    
    public void dfs(char[][] board, int row, int col) {
        if(row < 0 || row >= board.length || col < 0 || col >= board[0].length || board[row][col] != 'O')
            return;
        board[row][col] = 'A';
        dfs(board, row+1, col);
        dfs(board, row-1, col);
        dfs(board, row, col+1);
        dfs(board, row, col-1);
    }
}
