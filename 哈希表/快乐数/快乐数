编写一个算法来判断一个数 n 是不是快乐数。

「快乐数」 定义为：

对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。
然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。
如果这个过程 结果为 1，那么这个数就是快乐数。
如果 n 是 快乐数 就返回 true ；不是，则返回 false 。

class Solution {
    public boolean isHappy(int n) {
        HashSet<Integer> set = new HashSet<>();
        int sum = n;
        while (sum!=1&&!set.contains(sum)){
            set.add(sum);
            sum=getNums(sum);
        }
        return sum==1;
    }
    public int getNums(int n){
        int res = 0;
        while (n > 0) {
            // 一直取 最后一位，做平方
            int temp = n % 10;
            res += temp * temp;
            // 再去掉 最后一位，做循环
            n /= 10;
        }
        return res;
    }
}
