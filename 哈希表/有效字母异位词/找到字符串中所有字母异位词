给定两个字符串 s 和 p，找到 s 中所有 p 的 异位词 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。

异位词 指由相同字母重排列形成的字符串（包括相同的字符串）。

 

示例 1:

输入: s = "cbaebabacd", p = "abc"
输出: [0,6]


class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        ArrayList<Integer> result = new ArrayList<>();
        if (s.length() < p.length())
            return result;
        int[] sCnt = new int[26], pCnt = new int[26];
        char[] charS = s.toCharArray();
        char[] charP = p.toCharArray();
        int fast = charP.length, slow = 0;
        for (int i = 0; i < fast; i++) {
            sCnt[charS[i] - 'a']++;
            pCnt[charP[i] - 'a']++;
        }
        if (Arrays.equals(sCnt, pCnt))
            result.add(0);
        for (int i = fast; i < charS.length; i++) {
            sCnt[charS[i - fast] - 'a']--;
            sCnt[charS[i] - 'a']++;
            if (Arrays.equals(sCnt, pCnt))
                result.add(i - fast + 1);
        }
        return result;
    }
}
